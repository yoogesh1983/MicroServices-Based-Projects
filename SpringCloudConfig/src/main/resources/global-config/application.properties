#Location of Eureka Server where it is running(http://localhost:1111)
######################################################################
eureka.client.serviceUrl.defaultZone=http://localhost:8083/eureka

#Location of activeMQ (http://localhost:8161)
#############################################
spring.activemq.broker-url=tcp://localhost:61616
#spring.activemq.user=admin
#spring.activemq.password=admin


#The name of the queue which is user defined
#############################################
microserviceApplication.queue.nameofQueue=positionQueue





#Hystrix circuit breaker setting (No need to change). Just for Information.
#If the situation is become dire, then this method will automatically be skipped and will go to handleExernalServiceDown() method
#default settings:
             #If there were more than 20 invocations of the method in a 10 second time window and more then 50% failed, then 
             #the circuit will break (open) i.e. skip this method and go to handleExernalServiceDown()
#############################################################################################################################################	               

# Generally the settings don't need to change! Remember, on failure
# THE FALLOVER WILL ALWAYS RUN IN THE EVENT OF FAILURE - the breaker 
# doesn't need to be open. 

# This is how many requests needs to be made to the method before the circuit
# breaker will even consider tripping. Default = 20 in the rolling time window 
hystrix.command.default.circuitBreaker.requestVolumeThreshold=20

# Once the breaker does consider tripping, it decides if the number of failures
# in the rolling time window exceeds this percentage. Default 50%. (ie 0% means a single
# error will be considered a "trip" - but the above needs to be met as well).
hystrix.command.default.circuitBreaker.errorThresholdPercentage=50

# This is the aforementioned rolling time window. A long one will make 
# hystrix "more sensitive".  Default = 10000 (10secs)
hystrix.command.default.metrics.rollingStats.timeInMilliseconds=10000

# Despite all of the above, after the following period, the breaker will close
# Of course, it can be tripped again. Default = 5000 (5 seconds)
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=5000


# The following may need to be changed. If this is exceeded, we run fallback
# (and it is considered a fail for the above rules)
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=1000

